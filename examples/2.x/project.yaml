tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/4.5/types.yaml
  - plugin:cloudify-openstack-plugin
  - https://raw.githubusercontent.com/cloudify-cosmo/cloudify-openstack-plugin/3.1.0/compat.yaml

inputs:

  openstack_username:
    default: { get_secret: openstack_username }

  openstack_password:
    default: { get_secret: openstack_password }

  openstack_tenant_name:
    default: { get_secret: openstack_tenant_name }

  openstack_url:
    default: { get_secret: openstack_url }

  region:
    default: { get_secret: region }

  parent_project_name:
    description: The name of parent project
    default: { get_input: openstack_tenant_name }

dsl_definitions:

  openstack_config: &openstack_config
    username: { get_input: openstack_username }
    password: { get_input: openstack_password }
    tenant_name: { get_input: openstack_tenant_name }
    auth_url: { get_input: openstack_url }
    region: { get_input: region }

node_templates:

  example-project:
    type: cloudify.openstack.nodes.Project
    properties:
      openstack_config: *openstack_config
      resource_id: test-project
      project:
        enabled: False
        tags:
          - 'tag1'
          - 'tag2'
          - 'tag3'
        parent: { get_input: parent_project_name }
      # Users & roles must be exist in order to assign them to this group,
      # otherwise the install workflow will fail
#      users:
#        - name: mohammeda
#          roles:
#            - test-role-1
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            args:
              is_domain: False
              description: 'Test Project'
            resource_id: { get_property: [ SELF, resource_id ] }
            openstack_config: { get_property: [ SELF, openstack_config ] }

